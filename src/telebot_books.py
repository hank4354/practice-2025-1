import os
import json
import telebot
from telebot import types

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot("8014461297:AAH4iKyUIzLv97LQpdBDPidDBjH-z9M_U4E")

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–∞–Ω–Ω—ã—Ö
data_file = os.path.join(os.path.dirname(os.path.abspath(__file__)), "data", "users.json")
os.makedirs(os.path.dirname(data_file), exist_ok=True)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}
user_data = {}

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
ADD_BOOK_TITLE = 1
ADD_BOOK_AUTHOR = 2
ADD_BOOK_YEAR = 3
ADD_BOOK_RATING = 4
ADD_BOOK_REVIEW = 5

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
def load_data():
    try:
        if os.path.exists(data_file):
            with open(data_file, 'r', encoding='utf-8') as f:
                return json.load(f)
        return {}
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return {}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def save_data(data):
    try:
        with open(data_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–Ω–∏–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_books(user_id):
    data = load_data()
    user_id_str = str(user_id)
    if user_id_str not in data:
        data[user_id_str] = {"books": []}
        save_data(data)
    return data[user_id_str]["books"]

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏
def add_book(user_id, title, author, year, rating, review):
    data = load_data()
    user_id_str = str(user_id)
    
    if user_id_str not in data:
        data[user_id_str] = {"books": []}
    
    book_id = len(data[user_id_str]["books"])
    
    book = {
        "id": book_id,
        "title": title,
        "author": author,
        "year": year,
        "rating": rating,
        "review": review
    }
    
    data[user_id_str]["books"].append(book)
    save_data(data)
    return True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥.\n\n–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—á–∏—Ç–∞–ª–∏, –æ—Ü–µ–Ω–∏–≤–∞—Ç—å –∏—Ö –∏ –ø–∏—Å–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–µ –æ—Ç–∑—ã–≤—ã. –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def help_command(message):
    help_text = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
    help_text += "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
    help_text += "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
    help_text += "/addbook - –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö\n"
    help_text += "/mybooks - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥\n"
    help_text += "/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
    bot.reply_to(message, help_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel
@bot.message_handler(commands=['cancel'])
def cancel(message):
    user_id = message.from_user.id
    if user_id in user_states:
        del user_states[user_id]
    if user_id in user_data:
        del user_data[user_id]
    bot.reply_to(message, "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /addbook
@bot.message_handler(commands=['addbook'])
def add_book_start(message):
    user_id = message.from_user.id
    user_states[user_id] = ADD_BOOK_TITLE
    user_data[user_id] = {}
    bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏:")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mybooks
@bot.message_handler(commands=['mybooks'])
def my_books(message):
    user_id = message.from_user.id
    books = get_user_books(user_id)
    
    if not books:
        bot.reply_to(message, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥.")
        return
    
    response = "–í–∞—à–∏ –∫–Ω–∏–≥–∏:\n\n"
    for book in books:
        stars = "‚≠ê" * book["rating"]
        response += f"üìö {book['title']} ({book['author']}, {book['year']}) - {stars}\n"
    
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_id = message.from_user.id
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏
    if user_id not in user_states:
        bot.reply_to(message, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")
        return
    
    state = user_states[user_id]
    
    # –ü—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏
    if state == ADD_BOOK_TITLE:
        user_data[user_id]['title'] = message.text
        user_states[user_id] = ADD_BOOK_AUTHOR
        bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏:")
    
    elif state == ADD_BOOK_AUTHOR:
        user_data[user_id]['author'] = message.text
        user_states[user_id] = ADD_BOOK_YEAR
        bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏:")
    
    elif state == ADD_BOOK_YEAR:
        try:
            year = int(message.text)
            user_data[user_id]['year'] = year
            user_states[user_id] = ADD_BOOK_RATING
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ü–µ–Ω–∫–∏
            markup = types.InlineKeyboardMarkup(row_width=5)
            buttons = [types.InlineKeyboardButton(f"{i} ‚≠ê", callback_data=f"rating_{i}") for i in range(1, 6)]
            markup.add(*buttons)
            
            bot.reply_to(message, "–û—Ü–µ–Ω–∏—Ç–µ –∫–Ω–∏–≥—É –æ—Ç 1 –¥–æ 5:", reply_markup=markup)
        except ValueError:
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è (—á–∏—Å–ª–æ).")
    
    elif state == ADD_BOOK_RATING:
        try:
            rating = int(message.text)
            if 1 <= rating <= 5:
                user_data[user_id]['rating'] = rating
                user_states[user_id] = ADD_BOOK_REVIEW
                bot.reply_to(message, "–ù–∞–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–∑—ã–≤ –æ –∫–Ω–∏–≥–µ:")
            else:
                bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –∫–Ω–∏–≥—É –æ—Ç 1 –¥–æ 5.")
        except ValueError:
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5.")
    
    elif state == ADD_BOOK_REVIEW:
        user_data[user_id]['review'] = message.text
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–∏–≥—É
        add_book(
            user_id,
            user_data[user_id]['title'],
            user_data[user_id]['author'],
            user_data[user_id]['year'],
            user_data[user_id]['rating'],
            user_data[user_id]['review']
        )
        
        del user_states[user_id]
        del user_data[user_id]
        
        bot.reply_to(message, "–ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –≤–∞—à —Å–ø–∏—Å–æ–∫!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: call.data.startswith('rating_'))
def handle_rating_callback(call):
    user_id = call.from_user.id
    
    if user_id in user_states and user_states[user_id] == ADD_BOOK_RATING:
        rating = int(call.data.split('_')[1])
        user_data[user_id]['rating'] = rating
        user_states[user_id] = ADD_BOOK_REVIEW
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞: {rating} ‚≠ê"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –æ—Ç–∑—ã–≤–∞
        bot.send_message(call.message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–∑—ã–≤ –æ –∫–Ω–∏–≥–µ:")

print("–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling()